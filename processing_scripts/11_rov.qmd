---
title: "ROV surveys"
number-sections: false
date: today
format: 
  html:
    self-contained: true
    code-fold: true
    toc: true
    toc-location: right
---

```{r, message = F, warning = F, fig.width = 10, fig.height = 10, echo = F}
library(paletteer)
library(sf)
library(bigrquery)
library(gt)
library(tidyverse)

knitr::opts_chunk$set(eval = F, warning = F, message = F, include = F, echo = F)

PristineSeasR::set_ps_paths(email = "marine.data.science@ngs.org")

exp_id <- "PLW_2024"

exp_path <- file.path(ps_science_path, "expeditions", "PLW-2024")

ps_data_path <- file.path(ps_science_path, "datasets/")

bigrquery::bq_auth(email = "marine.data.science@ngs.org")

bq_connection <- DBI::dbConnect(bigrquery::bigquery(), project = "pristine-seas")
```

# Metadata

```{r rov, eval = TRUE, include = T}
rov_fieldbook <- readxl::read_excel(file.path(exp_path, 
                                        paste0("data/primary/raw/rov/",
                                               exp_id,
                                               "_rov_fieldbook.xlsx")),
                                     sheet = "meta") |> 
  as_tibble() |> 
  janitor::clean_names()

rov_dives <- rov_fieldbook |>  
  rename(ps_site_id = ps_station_id,
         dive_type = type) |> 
  mutate(ps_expedition_id = exp_id, 
         method = "ROV",
         sublocation = NA_character_,
         team_lead = "Alyssa Adler",
         across(c(date), lubridate::ymd),
         across(c(lat_in, lat_out, lon_in, lon_out), round, 5),
         across(c(time_in, time_out), hms::as_hms),
         mutate(across(c(time_in, time_out), ~lubridate::as_datetime(., tz = "Pacific/Palau"))),
         dive_duration_hr = round(as.numeric((time_out - time_in)/60/60), 2)) |> 
    select(ps_expedition_id, method, ps_site_id, location, sublocation, date, time_in, time_out, dive_duration_hr, lon_in, lat_in, lon_out, lat_out, max_depth_m, dive_type, team_lead, notes, highlights) 

date(rov_dives$time_in) <- rov_dives$date
date(rov_dives$time_out) <- rov_dives$date

rov_dives$time_in <- with_tz(rov_dives$time_in, "UTC")
rov_dives$time_out <- with_tz(rov_dives$time_out, "UTC")

rov_transects <- readxl::read_excel(file.path(exp_path, 
                                        paste0("data/primary/raw/rov/",
                                               exp_id,
                                               "_rov_fieldbook.xlsx")),
                                     sheet = "transects") |> 
  as_tibble() |> 
  janitor::clean_names() |> 
  rename(ps_site_id = ps_station_id,
         transect_id = ps_transect_id,
         transect_depth_m = transect_depth) |> 
  mutate(across(c(start_time, end_time), hms::as_hms)) |> 
  select(ps_site_id, transect_id, transect_depth_m, transect_start_time = start_time, transect_end_time = end_time, bottom_type, transect_notes = notes)

rov_transects <- rov_dives |> 
  full_join(rov_transects) |> 
  relocate(c(team_lead, notes, highlights), .after = last_col())

exp_info <- read_csv(file.path(ps_science_path, "data-management/expeditions.csv")) |> 
  janitor::clean_names()

rov_dives |> 
  left_join(exp_info |> 
              select(ps_expedition_id = expedition_id, expedition_name)) |> 
  select(expedition_name, ps_site_id, location , time_in, lon_in, lat_in) |> 
  write_csv("~/Desktop/pristine_seas_rov_deployments.csv")
```

```{r rov_map, eval = TRUE, include = T}
tmp <- rov_transects |> 
  filter(!is.na(max_depth_m)) |> 
  st_as_sf(coords = c("lon_in", "lat_in"), crs = 4326) |> 
  group_by(method, ps_site_id, location, max_depth_m, geometry) |> 
  summarize(n_transects = n_distinct(transect_id, na.rm = T))

mapview::mapview(tmp,
                 zcol = c(max_depth_m = "max_depth_m"), 
                 legend = TRUE,
                 col.regions = paletteer_c("ggthemes::Red-Gold", 3),
                 map.types = c("Esri.WorldImagery"),
                 layer.name = "max_depth_m",
                 popup = leafpop::popupTable(tmp,
                                      zcol = c("method",
                                               "ps_site_id",
                                               "location",
                                               "max_depth_m",
                                               "n_transects")))
```

```{r rov_table, eval = TRUE, include = T}
rov_transects |> 
  group_by(location) |> 
  summarize(n_stations = n_distinct(ps_site_id),
            hours = sum(dive_duration_hr),
            mean_depth_m = round(mean(max_depth_m, na.rm = T),1),
            min_depth_m = min(max_depth_m, na.rm = T),
            max_depth_m = max(max_depth_m, na.rm = T)) |> 
  ungroup() |> 
  mutate_if(is.numeric, round, 3) |> 
  gt::gt(rowname_col = "location") |> 
  tab_spanner(label = "Depth", columns = contains("depth")) |> 
  grand_summary_rows(columns  = contains(c("n_stations", "hours")),
                     fns = list(list(label = md("**Grand total**"), fn = "sum")),
                     fmt = ~ fmt_number(., decimals = 0, use_seps = FALSE)) |> 
  grand_summary_rows(columns  = contains(c("mean_depth_m")),
                     fns = list(list(label = md("**Grand total**"), fn = "mean")),
                     fmt = ~ fmt_number(., decimals = 0, use_seps = FALSE)) |> 
  grand_summary_rows(columns  = contains(c("min_depth_m")),
                     fns = list(list(label = md("**Grand total**"), fn = "min")),
                     fmt = ~ fmt_number(., decimals = 0, use_seps = FALSE)) |> 
  grand_summary_rows(columns  = contains(c("max_depth_m")),
                     fns = list(list(label = md("**Grand total**"), fn = "max")),
                     fmt = ~ fmt_number(., decimals = 0, use_seps = FALSE)) |> 
  tab_header(title = "Number of ROV surveys per location and depth") |> 
  opt_align_table_header(align = "left") |> 
  tab_style(locations = cells_grand_summary(),
            style = cell_fill(color = "lightblue" |> adjust_luminance(steps = +2))) |> 
  tab_style(style = cell_text(weight = "bold"),
            locations = cells_row_groups()) |> 
  tab_options(ihtml.use_compact_mode = TRUE,
              data_row.padding = px(5)) |> 
  cols_label("n_stations" ~ "# dives") |> 
  cols_label_with(fn = ~str_extract(.x, "[^_]+") |> 
                    str_to_sentence()) 
```

```{r rov_NAs, eval = TRUE, include = T}
naniar::vis_miss(rov_transects)
```

```{r rov_export, eval = F}
bq_table_create(paste0("pristine-seas.metadata.",exp_id, "_rov"), 
                fields = as_bq_fields(rov_meta))

bigrquery::bq_table_upload(paste0("pristine-seas.metadata.",exp_id, "_rov"), 
                           values = rov_meta, fields = rov_meta)
```

